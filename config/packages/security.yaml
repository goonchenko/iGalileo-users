security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto
        App\Entity\Admin:
            algorithm: auto



    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_admin_provider:
            entity:
                class: App\Entity\Admin
                property: username
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        # used to reload user from session & other features (e.g. switch_user)
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        admin_secured_area:
            pattern:   ^/admin
            provider: app_admin_provider
            entry_point: App\Security\AdminLoginFormAuthenticator
            form_login:
                login_path: /admin
                check_path: /admin_check
                default_target_path: /admin
                username_parameter: username
                password_parameter: password
            custom_authenticator:
                    - App\Security\AdminLoginFormAuthenticator
            logout:
                path: admin_logout
                # where to redirect after logout
                target: /admin

        user_secured_area:
            pattern:   ^/
            provider: app_user_provider
            entry_point: App\Security\LoginFormAuthenticator
            form_login:
                login_path: /
                check_path: /login_check
                default_target_path: /
                username_parameter: email
                password_parameter: password
            custom_authenticator:
                - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                target: /





#        main:
#            lazy: true
#            provider: app_user_provider

            # Set as entry point the default authenticator of the application (LoginFormAuthenticator) to fix the issue
#            entry_point: App\Security\LoginFormAuthenticator
            # In this example, we have 3 authenticators, one of our sf application
            # and 2 social authenticators, therefore we use LoginFormAuthenticator as the entry point
#            custom_authenticator:
#                - App\Security\LoginFormAuthenticator
#                - App\Security\AdminLoginFormAuthenticator

#            logout:
#                path: app_logout
                # where to redirect after logout
                # target: app_any_route
#                target: /

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
#         - { path: ^/admin, roles: ROLE_ADMIN }
#         - { path: ^/, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
